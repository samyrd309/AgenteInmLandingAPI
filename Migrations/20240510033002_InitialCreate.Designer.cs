// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenteInmLandingAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240510033002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.AgenteInmobiliario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAgenteInmobiliario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AgentesInmobiliarios");
                });

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdAgenteInmobiliario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdAgenteInmobiliario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Entities.Models.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPropiedad");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdAgenteInmobiliario")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPropiedad")
                        .HasColumnType("int");

                    b.Property<decimal>("MetrosCuadrados")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("NumBanos")
                        .HasColumnType("int");

                    b.Property<int>("NumHabitaciones")
                        .HasColumnType("int");

                    b.Property<int>("NumParqueaderos")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdAgenteInmobiliario");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdTipoPropiedad");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("Entities.Models.TipoPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoPropiedad");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoPropiedades");
                });

            modelBuilder.Entity("Entities.Models.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdVisita");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenteInmobiliarioId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgenteInmobiliarioId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.HasOne("Entities.Models.AgenteInmobiliario", "AgenteInmobiliario")
                        .WithMany("Clientes")
                        .HasForeignKey("IdAgenteInmobiliario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteInmobiliario");
                });

            modelBuilder.Entity("Entities.Models.Propiedad", b =>
                {
                    b.HasOne("Entities.Models.AgenteInmobiliario", "AgenteInmobiliario")
                        .WithMany("Propiedades")
                        .HasForeignKey("IdAgenteInmobiliario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Cliente", "Cliente")
                        .WithMany("Propiedades")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.TipoPropiedad", "TipoPropiedad")
                        .WithMany("Propiedades")
                        .HasForeignKey("IdTipoPropiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteInmobiliario");

                    b.Navigation("Cliente");

                    b.Navigation("TipoPropiedad");
                });

            modelBuilder.Entity("Entities.Models.Visita", b =>
                {
                    b.HasOne("Entities.Models.AgenteInmobiliario", "AgenteInmobiliario")
                        .WithMany("Visitas")
                        .HasForeignKey("AgenteInmobiliarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Cliente", "Cliente")
                        .WithMany("Visitas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Propiedad", "Propiedad")
                        .WithMany("Visitas")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteInmobiliario");

                    b.Navigation("Cliente");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("Entities.Models.AgenteInmobiliario", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Propiedades");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("Entities.Models.Cliente", b =>
                {
                    b.Navigation("Propiedades");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("Entities.Models.Propiedad", b =>
                {
                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("Entities.Models.TipoPropiedad", b =>
                {
                    b.Navigation("Propiedades");
                });
#pragma warning restore 612, 618
        }
    }
}
